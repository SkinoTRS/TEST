local webhookUrl = "https://discord.com/api/webhooks/1367482213809131550/QAIBRsOswQY7lGf6FXoF5qmxfzUU_7hXZluOg3Usni8VPK3jv0pnfDxwEbD1JsXhdzgN"

local whitelist = {
    ["SA_BXI"] = 50,
    ["HAMODI_645"] = 50,
    ["Kl_4a"] = 50,
    ["RealMazenOnTop"] = 25,
    ["yo1yo122"] = 50,
    ["RealSpeedTM"] = 50,
    ["ShowCasesLua"] = 50,
}

local player = game.Players.LocalPlayer
local playerName = player.Name
local accessLevel = whitelist[playerName]

local ui = Instance.new("ScreenGui", game.CoreGui)
ui.Name = "MossUI"

local txt = Instance.new("TextLabel", ui)
txt.Size = UDim2.new(0, 250, 0, 35)
txt.Position = UDim2.new(1, -260, 1, -50)
txt.BackgroundTransparency = 0.3
txt.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
txt.BorderSizePixel = 0
txt.Text = "Script Moss Work!"
txt.TextColor3 = Color3.fromRGB(0, 255, 0)
txt.TextScaled = true
txt.Font = Enum.Font.GothamBold
txt.TextStrokeTransparency = 0.8
txt.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
txt.Visible = false

if accessLevel then
    txt.Visible = true
    task.delay(5, function()
        if txt and txt.Parent then
            txt:Destroy()
        end
    end)

    local HttpService = game:GetService("HttpService")
    local displayName = player.DisplayName
    local userId = player.UserId
    local deviceType = game:GetService("UserInputService"):GetPlatform() == Enum.Platform.Windows and "PC ðŸ’»" or "Mobile ðŸ“±"
    local health = player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health or "N/A"
    local maxHealth = player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.MaxHealth or "N/A"
    local pingValue = tonumber(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString():match("(%d+)")) or "N/A"
    local executor = identifyexecutor and identifyexecutor() or "Unknown"
    local gameId = game.PlaceId
    local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    local serverTime = os.date("%Y-%m-%d %H:%M:%S")

    local data = {
        ["embeds"] = { {
            ["title"] = "âœ… Whitelist Access - Moss",
            ["description"] = "ØªÙ… Ø§Ù„Ø³Ù…Ø§Ø­ Ù„Ù€ **" .. playerName .. "** Ø¨Ø§Ù„Ø¯Ø®ÙˆÙ„.",
            ["color"] = 65280,
            ["fields"] = {
                {["name"] = "Player Info", ["value"] = "Username: " .. playerName .. "\nDisplay Name: " .. displayName .. "\nUserID: " .. userId, ["inline"] = true},
                {["name"] = "Access Level", ["value"] = tostring(accessLevel) .. "%", ["inline"] = true},
                {["name"] = "Game Info", ["value"] = "Game: " .. gameName .. "\nGame ID: " .. gameId, ["inline"] = true},
                {["name"] = "Health", ["value"] = health .. " / " .. maxHealth, ["inline"] = true},
                {["name"] = "Ping", ["value"] = pingValue .. " ms", ["inline"] = true},
                {["name"] = "Device", ["value"] = deviceType, ["inline"] = true},
                {["name"] = "Executor", ["value"] = executor, ["inline"] = true}
            },
            ["footer"] = {["text"] = "Time: " .. serverTime}
        }}
    }

    pcall(function()
        local jsonData = HttpService:JSONEncode(data)
        local headers = {["Content-Type"] = "application/json"}
        local request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request)
        if request then
            request({
                Url = webhookUrl,
                Body = jsonData,
                Method = "POST",
                Headers = headers
            })
        end
    end)

    
    if accessLevel == 75 then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkinoTRS/Moss-75/refs/heads/main/75%25"))()
    elseif accessLevel == 50 then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkinoTRS/Moss-50/refs/heads/main/50%25"))()
    elseif accessLevel == 25 then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkinoTRS/Moss/refs/heads/main/25%25"))()
    end
end
